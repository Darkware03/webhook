## --------------------
## DON'T EDIT THIS FILE
## --------------------
## Engine: yamlinc@0.1.10
## Source: ./app/docs/swagger/include.yaml

openapi: 3.0.1
info:
  title: Documentación de la API de la Plantilla
  description: >-
    Aquí se encuentra la información correspondiente a los endpoints de 
    interacción con la API para facilitar el consumo de esta. (Esto es una
    plantilla para  representar el correcto funcionamiento del Swagger y
    actualmente no contiene ningun endpoint de la API, deberán agregarse cuando
    ya se encuentren disponibles).
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: encargado@salud.gob.sv
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'http://localhost:8000/'
paths:
  /api/v1/users:
    post:
      tags:
        - usuario
      summary: Añade un nuevo usuario
      operationId: addUser
      requestBody:
        description: Objeto Usuario que será agregado al servicio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Not Found
        '405':
          description: Not Allowed
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
    get:
      tags:
        - usuario
      summary: Muestra todos los usuarios
      operationId: users
      produces:
        - application/json
      responses:
        '200': null
        '401':
          description: Usuario no auntenticado
    put:
      tags:
        - usuario
      summary: Actualiza la información de un usuario
    delete:
      tags:
        - usuario
      summary: Elimina un usuario
  'api/v1/users/{id}':
    get:
      summary: Muestra usuario por id
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          minimum: 1
          description: null
      responses:
        '200':
          description: Un objeto usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  perfiles:
                    type: object
                    properties: {}
                  roles:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
  area: api
  /login:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: null
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                      password:
                        type: string
                      last_login:
                        type: string
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Acceso no Autorizado
          content: {}
        '404':
          description: Not Found
        '405':
          description: Not Allowed
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /refresh_token:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: null
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                      password:
                        type: string
                      last_login:
                        type: string
        '400':
          description: Bad Request
          content: {}
        '401':
          description: Acceso no Autorizado
          content: {}
        '404':
          description: Not Found
        '405':
          description: Not Allowed
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /rol:
    post:
      tags:
        - rol
      summary: Añade un nuevo rol
      operationId: addRol
      requestBody:
        description: Objeto Rol que será agregado al servicio
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rol'
        required: true
      responses:
        '200':
          description: null
          content: null
      x-codegen-request-body-name: body
    area: api
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Rol:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Perfil: {}
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
security: null
bearerAuth: []
